//
//  app_nTA_macOS.m
//  nTA
//
//  Created by Logan Jones on 5/5/16.
//  Copyright Â© 2016 Logan Jones. All rights reserved.
//

#import <Foundation/Foundation.h>


/**
 Build a Windows compatible argv by distilling NSProcessInfo's arguments
 into an array of C Strings.
 
 @note Must call _FreeARGV_macOS to properly dispose of the generated argv array.
 
 @return The number of command-line arguments (argc).
 */
const int _MakeARGV_macOS(char ***pargv) {
    
    if (!pargv) { return 0; }
    
    NSArray *arguments = [[NSProcessInfo processInfo] arguments];
    const int argc = (int)arguments.count;
    
    if (argc <= 0) { return 0; }
    
    char **argv = (char **)malloc(sizeof(char **) * arguments.count);
    
    int i = 0;
    for (NSString *arg in arguments) {
        argv[i] = (char *)malloc([arg lengthOfBytesUsingEncoding:NSUTF8StringEncoding] + 1);
        strcpy(argv[i], arg.UTF8String);
        ++i;
    }
    
    *pargv = argv;
    return argc;
}

/**
 Dispose of an argv array that was generated by _MakeARGV_macOS.
 */
void _FreeARGV_macOS(char **argv, const int argc) {
    
    if (!argv) { return ; }
    
    for (int i=0; i < argc; ++i) {
        free(argv[i]);
    }
    
    free(argv);
}


#include "app.h"
#include "game.h"


//////////////////////////////////////////////////////////////////////
// app_nTA::FindTotalAnnihilation() //             \author Logan Jones
//////////////////////////////////////                 \date 9/20/2001
//
//====================================================================
// Return: BOOL -
//
BOOL app_nTA::FindTotalAnnihilation()
{
    // TODO: How to locate TA assets on a Mac!
    
    // Try to find OTA in Steam's apps directory.
    // TODO: Find a better way to locate SteamApps & a potential TA (other than this hardcoded path)
    NSString *applicationSupport = NSSearchPathForDirectoriesInDomains(NSApplicationSupportDirectory, NSUserDomainMask, YES).firstObject;
    if (applicationSupport) {
        NSString *ta = [NSString pathWithComponents:@[applicationSupport, @"Steam", @"SteamApps", @"common", @"Total Annihilation"]];
        
        BOOL isDirectory = NO;
        BOOL exists = [[NSFileManager defaultManager] fileExistsAtPath:ta isDirectory:&isDirectory];
        
        if (exists && isDirectory) {
            strcpy(m_TotalAnnihilationDirectory, ta.UTF8String);
            return TRUE;
        }
    }
    
    // Try "~/Temp/Total Annihilation" ... because that's where I dumped the files from my PC.
    {
        NSString *ta = [NSString pathWithComponents:@[NSHomeDirectory(), @"Temp", @"Total Annihilation"]];
        
        BOOL isDirectory = NO;
        BOOL exists = [[NSFileManager defaultManager] fileExistsAtPath:ta isDirectory:&isDirectory];
        
        if (exists && isDirectory) {
            strcpy(m_TotalAnnihilationDirectory, ta.UTF8String);
            return TRUE;
        }
    }
    
    return FALSE;
}
// End app_nTA::FindTotalAnnihilation()
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
// app_nTA::LoadSettings() //                      \author Logan Jones
/////////////////////////////                         \date 11/11/2001
//
//====================================================================
//
void app_nTA::LoadSettings()
{
}
// End app_nTA::LoadSettings()
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
// app_nTA::DestroyNTASettings() //                \author Logan Jones
//////////////////////////////////                     \date 8/12/2002
//
//====================================================================
//
void app_nTA::DestroyNTASettings()
{
}
// End app_nTA::DestroyNTASettings()
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
// app_nTA::SaveRendererSettings() //              \author Logan Jones
////////////////////////////////////                   \date 8/12/2002
//
//====================================================================
//
void app_nTA::SaveRendererSettings()
{
}
// End app_nTA::SaveRendererSettings()
//////////////////////////////////////////////////////////////////////
