// game_NetMessages.cpp //                 Author: Logan "Burn" Jones
/////////////////////////                             Date: 10/6/2002
//
/////////////////////////////////////////////////////////////////////

#include "game.h"
#include "net.h"

//////////////////////////////////////////////////////////////////////
// game_Main::ProccessNetMessages() //      Author: Logan "Burn" Jones
/////////////////////////////////////                  Date: 9/17/2002
//
//====================================================================
//
void game_Main::ProccessNetMessages()
{
	UINT8	Msg;

	while( net.Read().BytesToRead() )
		if( net.Read().Marker()==net_SystemMarker )
			HandleNetSystemMessage();
		else if( (Msg=net.Read().GetUInt8())<NET_MESSAGE_COUNT )
			m_NetMessageHandlers[Msg]( *this );
		else HandleUndefinedNetMessage( Msg );
}
// End game_Main::ProccessNetMessages()
//////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////
// game_Main::HandleNetSystemMessage() //  Author: Logan "Burn" Jones
////////////////////////////////////////             Date: 05-08-2003
//
//===================================================================
//
void game_Main::HandleNetSystemMessage()
{
	UINT32	Msg;

	if( Tick==0 ) LoadMessage(0,true);
	else switch( Msg=net.Read().GetUInt32() ){
		case net_NewConnection: // Shouldn't happen!!!
			theApp.Console.Comment( CT_LOAD, "game_Main::HandleNetSystemMessage(): New connection?, %u", net.Read().GetUInt32() );
			break;
		case net_ConnectionClosed: // Do some special handling
			net.Read().GetUInt32();
			break;
		case net_ClientList:  // Shouldn't happen either, ignore
			net.Read() >> Msg;
			net.Read().MoveCursor( Msg*4 );
			break;
	}
}
// End game_Main::HandleNetSystemMessage()
/////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////
// game_Main::HandleUndefinedNetMessage() // Author: Logan "Burn" Jones
///////////////////////////////////////////          Date: 05-08-2003
//
//===================================================================
// Parameters:
//  UINT8 uiMsg - 
//
void game_Main::HandleUndefinedNetMessage( UINT8 uiMsg )
{
	if( Tick==0 ) LoadMessage(uiMsg,false);
	else theApp.Console.Comment( CT_LOAD, "game_Main::HandleUndefinedNetMessage(): What?, %u", uiMsg );
}
// End game_Main::HandleUndefinedNetMessage()
/////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////
// game_Main::OnNotifySpawnCompleteUnit() // Author: Logan "Burn" Jones
///////////////////////////////////////////          Date: 02-16-2003
//
//===================================================================
// Parameters:
//  const unit_Type* pType   - 
//  const std_Point& ptWhere - 
//  int iPlayer              - 
//
void game_Main::OnNotifySpawnCompleteUnit( const unit_Type* pType, const std_Point& ptWhere, UINT8 iPlayer )
{
	unit_Object* pUnit = Units.SpawnUnit( pType, ptWhere, Players[iPlayer] );
	pUnit->OnComplete();
}
// End game_Main::OnNotifySpawnCompleteUnit()
/////////////////////////////////////////////////////////////////////



/////////////////////////////////////////////////////////////////////
// Game NetMessage method implementations
//{{AFX Net Messages (Generated by AsmNetMsg.exe. DO NOT EDIT)

/////////////////////////////////////////////////////////////////////
// game_Main::NotifySpawnCompleteUnit //        Author: AsmNetMsg.exe
///////////////////////////////////////                Date: 5/4/2004
//
//===================================================================
//
void game_Main::NotifySpawnCompleteUnit( const unit_Type* pType, const std_Point& ptWhere, UINT8 iPlayer )
{
    if( theGame.IsGameServer ) {
        OnNotifySpawnCompleteUnit( pType, ptWhere, iPlayer );
		net.Write().Write()
		<< (UINT8)Notify_SpawnCompleteUnit
		<< pType->Key
		<< ptWhere
		<< iPlayer;
    }
}
// End game_Main::NotifySpawnCompleteUnit()
/////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////
// game_Main::AssignNetMessageHandlers() //     Author: AsmNetMsg.exe
//////////////////////////////////////////             Date: 5/4/2004
//
//===================================================================
//
void game_Main::AssignNetMessageHandlers()
{
	m_NetMessageHandlers[Request_Stop] = &CallRequestStop;
	m_NetMessageHandlers[Request_MoveTo] = &CallRequestMoveTo;
	m_NetMessageHandlers[Request_Build] = &CallRequestBuild;
	m_NetMessageHandlers[Request_Activate] = &CallRequestActivate;
	m_NetMessageHandlers[Request_Attack] = &CallRequestAttack;
	m_NetMessageHandlers[Request_Unit] = &CallRequestUnit;
	m_NetMessageHandlers[Notify_SpawnCompleteUnit] = &CallNotifySpawnCompleteUnit;
	m_NetMessageHandlers[Notify_PrepareToBuild] = &CallNotifyPrepareToBuild;
	m_NetMessageHandlers[Notify_SpawnNewUnit] = &CallNotifySpawnNewUnit;
}
// End game_Main::AssignNetMessageHandlers()
/////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////
// game_Main::CallRequestStop() //              Author: AsmNetMsg.exe
/////////////////////////////////                      Date: 5/4/2004
//
//===================================================================
//
void CALLBACK game_Main::CallRequestStop( game_Main& Game )
{
	Game.Units.GetUnitInterface(net.Read().UInt32At(0))->OnRequestStop();
	net.Read().MoveCursor( sizeof(UINT32) );
}
// End game_Main::CallRequestStop()
/////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////
// game_Main::CallRequestMoveTo() //            Author: AsmNetMsg.exe
///////////////////////////////////                    Date: 5/4/2004
//
//===================================================================
//
void CALLBACK game_Main::CallRequestMoveTo( game_Main& Game )
{
	Game.Units.GetUnitInterface(net.Read().UInt32At(0))->OnRequestMoveTo(
		net.Read().PointAt(sizeof(UINT32)),
		net.Read().UInt8At(sizeof(UINT32) + sizeof(INT32) + sizeof(INT32))!=0 );
	net.Read().MoveCursor( sizeof(UINT32) + sizeof(INT32) + sizeof(INT32) + sizeof(UINT8) );
}
// End game_Main::CallRequestMoveTo()
/////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////
// game_Main::CallRequestBuild() //             Author: AsmNetMsg.exe
//////////////////////////////////                     Date: 5/4/2004
//
//===================================================================
//
void CALLBACK game_Main::CallRequestBuild( game_Main& Game )
{
	Game.Units.GetUnitInterface(net.Read().UInt32At(0))->OnRequestBuild(
		Game.Units.GetUnitType(net.Read().UInt32At(sizeof(UINT32))),
		net.Read().PointAt(sizeof(UINT32) + sizeof(UINT32)),
		net.Read().UInt8At(sizeof(UINT32) + sizeof(UINT32) + sizeof(INT32) + sizeof(INT32))!=0 );
	net.Read().MoveCursor( sizeof(UINT32) + sizeof(UINT32) + sizeof(INT32) + sizeof(INT32) + sizeof(UINT8) );
}
// End game_Main::CallRequestBuild()
/////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////
// game_Main::CallRequestActivate() //          Author: AsmNetMsg.exe
/////////////////////////////////////                  Date: 5/4/2004
//
//===================================================================
//
void CALLBACK game_Main::CallRequestActivate( game_Main& Game )
{
	Game.Units.GetUnitInterface(net.Read().UInt32At(0))->OnRequestActivate(
		net.Read().UInt8At(sizeof(UINT32))!=0 );
	net.Read().MoveCursor( sizeof(UINT32) + sizeof(UINT8) );
}
// End game_Main::CallRequestActivate()
/////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////
// game_Main::CallRequestAttack() //            Author: AsmNetMsg.exe
///////////////////////////////////                    Date: 5/4/2004
//
//===================================================================
//
void CALLBACK game_Main::CallRequestAttack( game_Main& Game )
{
	Game.Units.GetUnitInterface(net.Read().UInt32At(0))->OnRequestAttack(
		net.Read().PointAt(sizeof(UINT32)),
		net.Read().UInt8At(sizeof(UINT32) + sizeof(INT32) + sizeof(INT32))!=0 );
	net.Read().MoveCursor( sizeof(UINT32) + sizeof(INT32) + sizeof(INT32) + sizeof(UINT8) );
}
// End game_Main::CallRequestAttack()
/////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////
// game_Main::CallRequestUnit() //              Author: AsmNetMsg.exe
/////////////////////////////////                      Date: 5/4/2004
//
//===================================================================
//
void CALLBACK game_Main::CallRequestUnit( game_Main& Game )
{
	Game.Units.GetUnitInterface(net.Read().UInt32At(0))->OnRequestUnit(
		Game.Units.GetUnitType(net.Read().UInt32At(sizeof(UINT32))) );
	net.Read().MoveCursor( sizeof(UINT32) + sizeof(UINT32) );
}
// End game_Main::CallRequestUnit()
/////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////
// game_Main::CallNotifySpawnCompleteUnit() //  Author: AsmNetMsg.exe
/////////////////////////////////////////////          Date: 5/4/2004
//
//===================================================================
//
void CALLBACK game_Main::CallNotifySpawnCompleteUnit( game_Main& Game )
{
	Game.OnNotifySpawnCompleteUnit(
		Game.Units.GetUnitType(net.Read().UInt32At(0)),
		net.Read().PointAt(0 + sizeof(UINT32)),
		net.Read().UInt8At(0 + sizeof(UINT32) + sizeof(INT32) + sizeof(INT32)) );
	net.Read().MoveCursor( 0 + sizeof(UINT32) + sizeof(INT32) + sizeof(INT32) + sizeof(UINT8) );
}
// End game_Main::CallNotifySpawnCompleteUnit()
/////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////
// game_Main::CallNotifyPrepareToBuild() //     Author: AsmNetMsg.exe
//////////////////////////////////////////             Date: 5/4/2004
//
//===================================================================
//
void CALLBACK game_Main::CallNotifyPrepareToBuild( game_Main& Game )
{
	Game.Units.GetUnitInterface(net.Read().UInt32At(0))->OnNotifyPrepareToBuild(
		Game.Units.GetUnitType(net.Read().UInt32At(sizeof(UINT32))),
		net.Read().PointAt(sizeof(UINT32) + sizeof(UINT32)) );
	net.Read().MoveCursor( sizeof(UINT32) + sizeof(UINT32) + sizeof(INT32) + sizeof(INT32) );
}
// End game_Main::CallNotifyPrepareToBuild()
/////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////
// game_Main::CallNotifySpawnNewUnit() //       Author: AsmNetMsg.exe
////////////////////////////////////////               Date: 5/4/2004
//
//===================================================================
//
void CALLBACK game_Main::CallNotifySpawnNewUnit( game_Main& Game )
{
	Game.Units.GetUnitInterface(net.Read().UInt32At(0))->OnNotifySpawnNewUnit(
		Game.Units.GetUnitType(net.Read().UInt32At(sizeof(UINT32))),
		net.Read().PointAt(sizeof(UINT32) + sizeof(UINT32)) );
	net.Read().MoveCursor( sizeof(UINT32) + sizeof(UINT32) + sizeof(INT32) + sizeof(INT32) );
}
// End game_Main::CallNotifySpawnNewUnit()
/////////////////////////////////////////////////////////////////////
//}}AFX Net Messages

/////////////////////////////////////////////////////////////////////
// End - game_NetMessages.cpp //
///////////////////////////////
